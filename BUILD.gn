# Copyright (c) 2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/test.gni")

ohos_rust_shared_library("lib") {
  crate_name = "ylong_json"
  crate_type = "dylib"
  crate_root = "src/lib.rs"

  subsystem_name = "commonlibrary"
  part_name = "ylong_json"

  sources = [ "src/lib.rs" ]

  deps = [
    "//third_party/rust/crates/serde/serde:lib",
  ]

  if (defined(global_parts_info) &&
      !defined(global_parts_info.third_party_rust_libc)) {
    deps += [ "//third_party/rust/crates/libc:lib" ]
  } else {
    external_deps += [ "rust_libc:lib" ]
  }

  features = [
    "default",
    "vec_array",
    "btree_object",
    "ascii_only",
  ]
}

ohos_rust_unittest("rust_ylong_json_unit_test") {
  module_out_path = "ylong_json/ylong_json"
  sources = [ "src/lib.rs" ]
  deps = [
    ":lib",
    "//third_party/rust/crates/serde/serde:lib",
  ]

  if (defined(global_parts_info) &&
      !defined(global_parts_info.third_party_rust_libc)) {
    deps += [ "//third_party/rust/crates/libc:lib" ]
  } else {
    external_deps += [ "rust_libc:lib" ]
  }

  if (defined(global_parts_info) &&
      !defined(global_parts_info.third_party_rust_serde)) {
    deps += [ "//third_party/rust/crates/serde/serde:lib" ]
  } else {
    external_deps += [ "rust_serde:lib" ]
  }

  rustflags = [
    "--cfg=feature=\"default\"",
    "--cfg=feature=\"vec_array\"",
    "--cfg=feature=\"btree_object\"",
    "--cfg=feature=\"ascii_only\"",
  ]
}

group("unittest") {
  testonly = true
  deps = []
  if (!use_clang_coverage) {
    deps += [ ":rust_ylong_json_unit_test" ]
  }
}